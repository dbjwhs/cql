@variable "license_type" "MIT License"
@variable "license_owner" "2025 dbjwhs"
@variable "language" "C++"
@variable "collection_type" "queue"
@variable "language_version" "C++20"
@variable "ops_per_second" "100k"
@variable "synchronization_method" "mutex and condition variables"

@copyright "${license_type}" "${license_owner}"
@language "${language}"
@description "implement a ${collection_type} class with thread-safety"
@context "Using ${language_version} features and RAII principles"
@context "Must be exception-safe"
@dependency "std::mutex, std::condition_variable"
@performance "Support ${ops_per_second} operations per second"
@security "Prevent data races through proper synchronization"
@architecture "Thread-safe implementation with ${synchronization_method}"
@test "Test concurrent push operations"
@test "Test concurrent pop operations"
@test "Test boundary conditions (empty/full)"
@test "Test exception safety guarantees"